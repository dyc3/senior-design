classDiagram
    class Monolith {
        <<service>>
    }

    class BalancerManager {
        - balancerConnections: BalancerConnection[]
        - bus: EventEmitter
        + addBalancerConnection(conn)
        + getConnection(id): BalancerConnection | undefined
        - onBalancerConnect(conn)
        - onBalancerDisconnect(conn, code, reason)
        - onBalancerMessage(conn, message)
        - onBalancerError(conn, error)
        + on(event, handler)
        - emit(event, ...args)
    }

    class BalancerConnection {
        <<abstract>>
        - id: string
        - bus: EventEmitter
        + send(message): Result<void, Error>
        + disconnect(): Result<void, Error>
        - emit(event, ...args)
        + on(event, handler)
    }

    class BalancerConnectionReal {
        - socket: WebSocket
        + readyState: number
        + send(message): Result<void, Error>
        - onSocketConnect(event)
        - onSocketDisconnect(code, reason)
        - onSocketMessage(data)
        - onSocketError(event)
    }

    class EventEmitter {

    }

    class WebSocket {

    }

    Monolith "1" --o "*" BalancerManager : contains

    BalancerManager --|> EventEmitter
    BalancerConnection --|> EventEmitter
    BalancerConnectionReal --|> BalancerConnection : implements
    BalancerConnectionReal --> WebSocket
